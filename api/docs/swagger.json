{
    "swagger": "2.0",
    "info": {
        "title": "API",
        "contact": {},
        "version": "1.7"
    },
    "host": "localhost:9050",
    "paths": {
        "/v1/appointment": {
            "get": {
                "description": "ListBookedAppointments - API to list doctor notes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointment"
                ],
                "summary": "ListBookedAppointments",
                "parameters": [
                    {
                        "type": "string",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            },
            "put": {
                "description": "UpdateDoctorNote - API to update appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointment"
                ],
                "summary": "UpdateBookedAppointment",
                "parameters": [
                    {
                        "description": "UpdateAppointmentReq",
                        "name": "UpdateAppointmentReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.UpdateAppointmentReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "CreateBookedAppointment - Api for create booked appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointment"
                ],
                "summary": "CreateBookedAppointment",
                "parameters": [
                    {
                        "description": "CreateAppointmentReq",
                        "name": "CreateAppointmentReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.CreateAppointmentReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "DeleteBookedAppointment - API to delete a appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointment"
                ],
                "summary": "DeleteBookedAppointment",
                "parameters": [
                    {
                        "type": "string",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StatusRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/appointment/get": {
            "get": {
                "description": "GetBookedAppointment - API to get Booked appointment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointment"
                ],
                "summary": "GetBookedAppointment",
                "parameters": [
                    {
                        "type": "string",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/archive": {
            "get": {
                "description": "ListArchive - Api for list archive",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Archive"
                ],
                "summary": "ListArchive",
                "parameters": [
                    {
                        "type": "string",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.ArchivesType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            },
            "put": {
                "description": "UpdateArchive - Api for update archive",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Archive"
                ],
                "summary": "UpdateArchive",
                "parameters": [
                    {
                        "description": "UpdateArchiveReq",
                        "name": "UpdateArchiveReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.UpdateArchiveReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.Archive"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "CreateArchive - Api for crete archive",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Archive"
                ],
                "summary": "CreateArchive",
                "parameters": [
                    {
                        "description": "CreateArchiveReq",
                        "name": "CreateArchiveReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.CreateArchiveReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.Archive"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "DeleteArchive - Api for delete archive",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Archive"
                ],
                "summary": "DeleteArchive",
                "parameters": [
                    {
                        "type": "string",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StatusRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/archive/get": {
            "get": {
                "description": "GetArchive - Api for get archive",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Archive"
                ],
                "summary": "GetArchive",
                "parameters": [
                    {
                        "type": "string",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.Archive"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/customer/forget_password": {
            "post": {
                "description": "ForgetPassword - Api for registering users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "ForgetPassword",
                "parameters": [
                    {
                        "description": "RegisterModelReq",
                        "name": "ForgetPassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model_user_service.PhoneNumberReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_user_service.MessageRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/customer/forget_password_verify": {
            "post": {
                "description": "ForgetPasswordVerify - Api for registering users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "ForgetPasswordVerify",
                "parameters": [
                    {
                        "description": "RegisterModelReq",
                        "name": "Verify",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model_user_service.ForgetPasswordVerify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_user_service.MessageRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/customer/login": {
            "post": {
                "description": "Login - Api for registering users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login Req",
                        "name": "Login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model_user_service.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_user_service.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/customer/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "LogOut - Api for registering users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "LogOut",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_user_service.MessageRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/customer/register": {
            "post": {
                "description": "Register - Api for registering users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "RegisterRequest",
                        "name": "Register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model_user_service.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_user_service.MessageRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/customer/verify": {
            "post": {
                "description": "customer - Api for registering users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Verify",
                "parameters": [
                    {
                        "description": "RegisterModelReq",
                        "name": "Verify",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model_user_service.Verify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_user_service.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/doctor-notes": {
            "get": {
                "description": "ListDoctorNotes - API to list doctor notes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Doctor Note"
                ],
                "summary": "ListDoctorNotes",
                "parameters": [
                    {
                        "type": "string",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.DoctorNotesType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            },
            "put": {
                "description": "UpdateDoctorNote - API to update a doctor note",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Doctor Note"
                ],
                "summary": "UpdateDoctorNote",
                "parameters": [
                    {
                        "description": "UpdateDoctorNoteReq",
                        "name": "UpdateDoctorNoteReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.UpdateDoctorNoteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.DoctorNote"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "CreateDoctorNote - Api for create doctor note",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Doctor Note"
                ],
                "summary": "CreateDoctorNote",
                "parameters": [
                    {
                        "description": "CreateDoctorNotesReq",
                        "name": "CreateDoctorNotesReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.CreateDoctorNotesReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.DoctorNote"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "DeleteDoctorNote - API to delete a doctor note",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Doctor Note"
                ],
                "summary": "DeleteDoctorNote",
                "parameters": [
                    {
                        "type": "string",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StatusRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/doctor-notes/get": {
            "get": {
                "description": "GetDoctorNote - API to get doctor note by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Doctor Note"
                ],
                "summary": "GetDoctorNote",
                "parameters": [
                    {
                        "type": "string",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.DoctorNote"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/doctor-time": {
            "get": {
                "description": "ListDoctorTimes - Api for list doctor time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Doctor Time"
                ],
                "summary": "ListDoctorTimes",
                "parameters": [
                    {
                        "type": "string",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.DoctorTimesType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            },
            "put": {
                "description": "UpdateDoctorTimes - Api for update doctor time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Doctor Time"
                ],
                "summary": "UpdateDoctorTimes",
                "parameters": [
                    {
                        "description": "UpdateDoctorTimeReq",
                        "name": "UpdateDoctorTimeReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.UpdateDoctorTimeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.DoctorTime"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "CreateDoctorTimes - Api for crete doctor time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Doctor Time"
                ],
                "summary": "CreateDoctorTimes",
                "parameters": [
                    {
                        "description": "CreateDoctorTimeReq",
                        "name": "CreateDoctorTimeReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.CreateDoctorTimeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.DoctorTime"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "DeleteDoctorTimes - Api for delete Doctor time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Doctor Time"
                ],
                "summary": "DeleteDoctorTimes",
                "parameters": [
                    {
                        "type": "string",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StatusRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/doctor-time/get": {
            "get": {
                "description": "GetDoctorTimes - Api for get doctor time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Doctor Time"
                ],
                "summary": "GetDoctorTimes",
                "parameters": [
                    {
                        "type": "string",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.DoctorTime"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/file-upload": {
            "post": {
                "description": "Upload image",
                "consumes": [
                    "image/png"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upload-file"
                ],
                "summary": "Upload image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_minio.MinioURL"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/patient": {
            "get": {
                "description": "ListPatient - Api for list patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patient"
                ],
                "summary": "ListPatient",
                "parameters": [
                    {
                        "type": "string",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.PatientsType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            },
            "put": {
                "description": "UpdatePatient - Api for update patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patient"
                ],
                "summary": "UpdatePatient",
                "parameters": [
                    {
                        "description": "UpdatePatientReq",
                        "name": "UpdatePatientReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.UpdatePatientReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.Patient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "CreatePatient - Api for crete patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patient"
                ],
                "summary": "CreatePatient",
                "parameters": [
                    {
                        "description": "CreatePatientReq",
                        "name": "CreatePatientReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.CreatePatientReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.Patient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "DeletePatient - Api for delete patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patient"
                ],
                "summary": "DeletePatient",
                "parameters": [
                    {
                        "type": "string",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StatusRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/patient/get": {
            "get": {
                "description": "GetPatient - Api for get patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patient"
                ],
                "summary": "GetPatient",
                "parameters": [
                    {
                        "type": "string",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_booking_service.Patient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/user": {
            "get": {
                "description": "Api for ListUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "ListUsers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "Page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "Limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Field",
                        "name": "Field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value",
                        "name": "Value",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "OrderBy",
                        "name": "OrderBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_user_service.GetUserResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            },
            "put": {
                "description": "Api for UpdateUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "UpdateUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserId",
                        "name": "UserId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "UpdUserReq",
                        "name": "UpdUserReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model_user_service.UpdUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_user_service.GetUserResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "Api for DeleteUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "DeleteUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Field",
                        "name": "Field",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Value",
                        "name": "Value",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_user_service.CheckUserFieldResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        },
        "/v1/user/get": {
            "get": {
                "description": "Api for GetUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "GetUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Field",
                        "name": "Field",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Value",
                        "name": "Value",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model_user_service.GetUserResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model_common.StandardErrorModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model_booking_service.Appointment": {
            "type": "object",
            "properties": {
                "appointment_date": {
                    "type": "string"
                },
                "appointment_time": {
                    "type": "string"
                },
                "department_id": {
                    "type": "string"
                },
                "doctor_id": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "patient_id": {
                    "type": "string"
                },
                "patient_status": {
                    "type": "boolean"
                }
            }
        },
        "model_booking_service.Archive": {
            "type": "object",
            "properties": {
                "doctor_availability_id": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "patient_problem": {
                    "type": "string"
                },
                "payment_amount": {
                    "type": "number"
                },
                "payment_type": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model_booking_service.ArchivesType": {
            "type": "object",
            "properties": {
                "archives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model_booking_service.Archive"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "model_booking_service.CreateAppointmentReq": {
            "type": "object",
            "properties": {
                "appointment_date": {
                    "type": "string"
                },
                "appointment_time": {
                    "type": "string"
                },
                "department_id": {
                    "type": "string"
                },
                "doctor_id": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "expires_at": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "patient_id": {
                    "type": "string"
                },
                "patient_status": {
                    "type": "boolean"
                }
            }
        },
        "model_booking_service.CreateArchiveReq": {
            "type": "object",
            "properties": {
                "doctor_availability_id": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "patient_problem": {
                    "type": "string"
                },
                "payment_amount": {
                    "type": "number"
                },
                "payment_type": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model_booking_service.CreateDoctorNotesReq": {
            "type": "object",
            "properties": {
                "appointment_id": {
                    "type": "integer"
                },
                "doctor_id": {
                    "type": "string"
                },
                "patient_id": {
                    "type": "string"
                },
                "prescription": {
                    "type": "string"
                }
            }
        },
        "model_booking_service.CreateDoctorTimeReq": {
            "type": "object",
            "properties": {
                "department_id": {
                    "type": "string"
                },
                "doctor_date": {
                    "type": "string"
                },
                "doctor_id": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model_booking_service.CreatePatientReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "blood_group": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "patient_problem": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "model_booking_service.DoctorNote": {
            "type": "object",
            "properties": {
                "appointment_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "doctor_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "patient_id": {
                    "type": "string"
                },
                "prescription": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model_booking_service.DoctorNotesType": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "doctor_notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model_booking_service.DoctorNote"
                    }
                }
            }
        },
        "model_booking_service.DoctorTime": {
            "type": "object",
            "properties": {
                "department_id": {
                    "type": "string"
                },
                "doctor_date": {
                    "type": "string"
                },
                "doctor_id": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model_booking_service.DoctorTimesType": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "doctor_times": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model_booking_service.DoctorTime"
                    }
                }
            }
        },
        "model_booking_service.Patient": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "blood_group": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "patient_problem": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "model_booking_service.PatientsType": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "patients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model_booking_service.Patient"
                    }
                }
            }
        },
        "model_booking_service.UpdateAppointmentReq": {
            "type": "object",
            "properties": {
                "appointment_date": {
                    "type": "string"
                },
                "appointment_time": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "expires_at": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "patient_status": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model_booking_service.UpdateArchiveReq": {
            "type": "object",
            "properties": {
                "doctor_availability_id": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "patient_problem": {
                    "type": "string"
                },
                "payment_amount": {
                    "type": "number"
                },
                "payment_type": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model_booking_service.UpdateDoctorNoteReq": {
            "type": "object",
            "properties": {
                "appointment_id": {
                    "type": "integer"
                },
                "doctor_id": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "patient_id": {
                    "type": "string"
                },
                "prescription": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model_booking_service.UpdateDoctorTimeReq": {
            "type": "object",
            "properties": {
                "department_id": {
                    "type": "string"
                },
                "doctor_date": {
                    "type": "string"
                },
                "doctor_id": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model_booking_service.UpdatePatientReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "blood_group": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "patient_problem": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model_common.ResponseError": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model_common.StandardErrorModel": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/model_common.ResponseError"
                }
            }
        },
        "model_minio.MinioURL": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "model_user_service.CheckUserFieldResp": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                }
            }
        },
        "model_user_service.ForgetPasswordVerify": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 7777
                },
                "new_password": {
                    "type": "string",
                    "example": "new_password"
                },
                "phone_number": {
                    "type": "string",
                    "example": "+998950230605"
                }
            }
        },
        "model_user_service.GetUserResp": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_order": {
                    "type": "integer"
                }
            }
        },
        "model_user_service.LoginReq": {
            "type": "object",
            "properties": {
                "fcm_token": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "phone_number": {
                    "type": "string",
                    "example": "+998950230605"
                },
                "platform_name": {
                    "type": "string"
                },
                "platform_type": {
                    "type": "string",
                    "example": "mobile"
                }
            }
        },
        "model_user_service.MessageRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "model_user_service.PhoneNumberReq": {
            "type": "object",
            "properties": {
                "phone_number": {
                    "type": "string",
                    "example": "+998950230605"
                }
            }
        },
        "model_user_service.RegisterRequest": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "2000-01-01"
                },
                "first_name": {
                    "type": "string",
                    "example": "Ali"
                },
                "gender": {
                    "type": "string",
                    "example": "male"
                },
                "last_name": {
                    "type": "string",
                    "example": "Jo'raxonov'"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "phone_number": {
                    "type": "string",
                    "example": "+998950230605"
                }
            }
        },
        "model_user_service.Response": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "model_user_service.UpdUserReq": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "model_user_service.Verify": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 7777
                },
                "fcm_token": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string",
                    "example": "+998950230605"
                },
                "platform_name": {
                    "type": "string"
                },
                "platform_type": {
                    "type": "string",
                    "example": "mobile"
                }
            }
        },
        "models.StatusRes": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}