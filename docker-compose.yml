services:

  db:
    container_name: postgresdb
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 20030505
      POSTGRES_DB: CICD_api_gatawey
      PGDATA: /data/postgres/new
    volumes:
      - db:/data/postgres/CICD_api_gatawey
    ports:
      - "5432:5432"
    networks:
      - db

  redisdb:
    container_name: redisdb
    image: redis
    ports:
      - "6379:6379"
    networks:
      - db

  CICD_api_gatawey:
    container_name: CICD_api_gatawey
    build: ./CICD_api_gatawey
    depends_on:
      - "db"
    ports:
      - "9050:9050"
    networks:
      - db


  jaeger-all-in-one:
    container_name: jaeger-all-in-one
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    networks:
      - db

  # Collector
  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector:latest
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317" # OTLP gRPC receiver
    depends_on:
      - jaeger-all-in-one
    networks:
      - db

  migrate:
    image: migrate/migrate
    networks:
      - db
    volumes:
      - ./migrations:/migrations
    command: [ "-path", "/migrations", "-database",  "postgres://postgres:20030505@db:5432/CICD_api_gatawey?sslmode=disable", "up"]
    links:
      - db
    depends_on:
      - db

  minio:
    image: bitnami/minio:2022
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - db
    volumes:
      - minio_data:/minio_data
      - ./config.json:/opt/bitnami/minio/conf/config.json
    environment:
      - MINIO_ROOT_USER=CICD_api_gatawey
      - MINIO_ROOT_PASSWORD=CICD_api_gatawey_service
      - MINIO_DEFAULT_BUCKETS=department
      - MINIO_DEFAULT_BUCKETS=doctor
      - MINIO_DEFAULT_BUCKETS=reasons
      - MINIO_DEFAULT_BUCKETS=specialization
      - MINIO_DEFAULT_BUCKETS=user



networks:
  db:
    driver: bridge


volumes:
  db:
  mongodb_data:
    driver: local
  minio_data:
    driver: local


  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - "2181:2181"
  #   networks:
  #     - db


  # kafka:
  #   container_name: kafka

  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - "zookeeper"
  #   ports:
  #     - "29092:29092"
  #   networks:
  #     - db

  #   environment:
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     # KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://0.0.0.0:29092
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # CICD_api_gatawey_booking_service:
  #   container_name: CICD_api_gatawey_booking_service
  #   build: ./CICD_api_gatawey_booking_service
  #   depends_on:
  #     - "db"
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - db
  # CICD_api_gatawey_healthcare_service:
  #   container_name: CICD_api_gatawey_healthcare_service
  #   build: ./CICD_api_gatawey_healthcare_service
  #   depends_on:
  #     - "db"
  #   ports:
  #     - "9080:9080"
  #   networks:
  #     - db

  # CICD_api_gatawey_session_service:
  #   container_name: CICD_api_gatawey_session_service
  #   build: ./CICD_api_gatawey_session_service
  #   depends_on:
  #     - "db"
  #   ports:
  #     - "9060:9060"
  #   networks:
  #     - db

  # CICD_api_gatawey_user_service:
  #   container_name: CICD_api_gatawey_user_service
  #   build: ./CICD_api_gatawey_user_service
  #   depends_on:
  #     - "db"
  #   ports:
  #     - "9070:9070"
  #   networks:
  #     - db